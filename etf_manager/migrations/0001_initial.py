# Generated by Django 3.2.12 on 2022-03-10 21:50

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter the category', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='DistributionPolicy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter the distribution policy', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Distribution Policies',
            },
        ),
        migrations.CreateModel(
            name='ETF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('isin', models.CharField(help_text='Enter ETF ISIN', max_length=12)),
                ('ticker', models.CharField(help_text='Enter ETF Ticker', max_length=10)),
                ('description', models.CharField(blank=True, default='', help_text='Enter a description', max_length=200)),
                ('size', models.IntegerField(help_text='Enter ETF size')),
                ('value', models.FloatField(help_text='Enter ETF current value')),
                ('currency', models.CharField(choices=[('EUR', 'Euro'), ('USD', 'United States Dollars'), ('JPY', 'Japan Yen')], help_text='Select ETF Currency', max_length=3)),
                ('ter', models.FloatField(help_text='Enter ETF TER')),
                ('location', models.CharField(help_text='Enter ETF location', max_length=50)),
                ('manager', models.CharField(help_text='Enter ETF manager', max_length=100)),
                ('category', models.ForeignKey(help_text='Select ETF Category', on_delete=django.db.models.deletion.PROTECT, to='etf_manager.category')),
                ('distribution_policy', models.ForeignKey(help_text='Select ETF distribution policy', on_delete=django.db.models.deletion.PROTECT, to='etf_manager.distributionpolicy')),
            ],
            options={
                'ordering': ['category', 'isin'],
            },
        ),
        migrations.CreateModel(
            name='Geography',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter the geography', max_length=20)),
            ],
            options={
                'verbose_name_plural': 'Geographies',
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter the economic sector', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Enter the tag', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique ID for this order', primary_key=True, serialize=False, unique=True)),
                ('quantity', models.IntegerField(help_text='Enter the quantity')),
                ('price', models.FloatField(help_text='Enter the current price')),
                ('trading_platform', models.CharField(choices=[('DEG', 'Degiro'), ('ING', 'ING Direct')], help_text='Select the trading platform', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('etf', models.ForeignKey(help_text='Select the ETF', on_delete=django.db.models.deletion.PROTECT, to='etf_manager.etf')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='etf',
            name='geography',
            field=models.ForeignKey(help_text='Select ETF Geography', on_delete=django.db.models.deletion.PROTECT, to='etf_manager.geography'),
        ),
        migrations.AddField(
            model_name='etf',
            name='sector',
            field=models.ForeignKey(help_text='Select ETF Sector', on_delete=django.db.models.deletion.PROTECT, to='etf_manager.sector'),
        ),
        migrations.AddField(
            model_name='etf',
            name='tags',
            field=models.ManyToManyField(help_text='Select ETF tags', to='etf_manager.Tag'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['updated_at', 'etf'], name='etf_manager_updated_17d4ff_idx'),
        ),
    ]
